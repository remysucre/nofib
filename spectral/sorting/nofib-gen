HC = /h/ywang30/.stack/programs/x86_64-linux/ghc-gmp4-7.8.4/bin/ghc
HC_OPTS = -XBangPatterns -O2 -funbox-strict-fields -Rghc-timing -H32m -hisuf hi -rtsopts
RUNTEST_OPTS = -ghc-timing
==nofib== sorting: time to compile Sort follows...
/h/ywang30/.stack/programs/x86_64-linux/ghc-gmp4-7.8.4/bin/ghc -XBangPatterns -O2 -funbox-strict-fields -Rghc-timing -H32m -hisuf hi -rtsopts -c Sort.hs -o Sort.o

Sort.hs:48:21:
    Couldn't match expected type ‘forall a2. Ord a2 => [a2] -> Tree a2’
                with actual type ‘[a1] -> Tree a1’
    Possible cause: ‘foldr’ is applied to too many arguments
    In the expression: foldr to_tree Tip
    In a pattern binding:
      (!mkTree)
        = foldr to_tree Tip
        where
            to_tree :: Ord a => a -> Tree a -> Tree a
            to_tree x (!Tip) = Branch x Tip Tip
            to_tree x (Branch y l (!r))
              | x <= y = Branch y (to_tree x l) r
              | True = Branch y l (to_tree x r)

Sort.hs:66:21:
    Couldn't match expected type ‘forall a2.
                                  Ord a2 =>
                                  [a2] -> Tree2 a2’
                with actual type ‘[a0] -> Tree2 a0’
    Possible cause: ‘foldr’ is applied to too many arguments
    In the expression: foldr to_tree Tip2
    In a pattern binding:
      (!mkTree)
        = foldr to_tree Tip2
        where
            to_tree :: Ord a => a -> Tree2 a -> Tree2 a
            to_tree x (!Tip2) = Twig2 x
            to_tree x (!(Twig2 (!y)))
              | x <= y = Branch2 y (Twig2 x) Tip2
              | True = Branch2 y Tip2 (Twig2 x)
            to_tree x (!(Branch2 y (!l) r))
              | x <= y = Branch2 y (to_tree x l) r
              | True = Branch2 y l (to_tree x r)
<<ghc: 86491856 bytes, 32 GCs, 5590898/10480880 avg/max bytes residency (4 samples), 32M in use, 0.00 INIT (0.00 elapsed), 0.09 MUT (0.09 elapsed), 0.15 GC (0.15 elapsed) :ghc>>
make: *** [Sort.o] Error 1

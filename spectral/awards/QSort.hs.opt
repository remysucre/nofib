module QSort (sortLe, sort) where
 
sortLe :: (a -> a -> Bool) -> [a] -> [a]
sortLe le l = qsort le l []
 
sort :: (Ord a) => [a] -> [a]
sort l = qsort (<=) l []
qsort le [] r = r
qsort le [x] r = x : r
qsort le (x : xs) r = qpart le x xs [] [] r
qpart le x [] rlt rge r = rqsort le rlt (x : rqsort le rge r)
qpart le x (y : ys) (!rlt) rge r
  = if le x y then qpart le x ys rlt (y : rge) r else
      qpart le x ys (y : rlt) rge r
rqsort le [] r = r
rqsort le [x] r = x : r
rqsort le (x : xs) r = rqpart le x xs [] [] r
rqpart le (!x) [] rle rgt r = qsort le rle (x : qsort le rgt r)
rqpart le x (y : ys) rle rgt r
  = if le y x then rqpart le x ys (y : rle) rgt r else
      rqpart le x ys rle (y : rgt) r
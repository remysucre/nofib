HC = /h/ywang30/.stack/programs/x86_64-linux/ghc-gmp4-7.8.4/bin/ghc
HC_OPTS = -O2 -Rghc-timing -H32m -hisuf hi -rtsopts -XBangPatterns -O2 -funbox-strict-fields -XBangPatterns -O2 -funbox-strict-fields
RUNTEST_OPTS = -ghc-timing +RTS -K128M -H -RTS
==nofib== binary-trees: time to compile Main follows...
/h/ywang30/.stack/programs/x86_64-linux/ghc-gmp4-7.8.4/bin/ghc -O2 -Rghc-timing -H32m -hisuf hi -rtsopts -XBangPatterns -O2 -funbox-strict-fields -XBangPatterns -O2 -funbox-strict-fields -c Main.hs -o Main.o
<<ghc: 240282192 bytes, 65 GCs, 8889406/20165016 avg/max bytes residency (5 samples), 45M in use, 0.01 INIT (0.01 elapsed), 0.29 MUT (0.35 elapsed), 0.42 GC (0.42 elapsed) :ghc>>
==nofib== binary-trees: size of Main.o follows...
   text	   data	    bss	    dec	    hex	filename
   8110	    448	      0	   8558	   216e	Main.o
==nofib== binary-trees: time to link binary-trees follows...
<<ghc: 38499184 bytes, 14 GCs, 410896/648680 avg/max bytes residency (2 samples), 30M in use, 0.00 INIT (0.00 elapsed), 0.13 MUT (1.20 elapsed), 0.18 GC (0.18 elapsed) :ghc>>
==nofib== binary-trees: size of binary-trees follows...
   text	   data	    bss	    dec	    hex	filename
 931924	  57392	  48776	1038092	  fd70c	binary-trees
==nofib== binary-trees: time to run binary-trees follows...
../../runstdtest/runstdtest ./binary-trees  -o1 binary-trees.stdout  -ghc-timing  +RTS -K128M -H -RTS    16;

real	0m1.305s
user	0m1.260s
sys	0m0.035s
<<ghc: 943943712 bytes, 310 GCs (296 + 14), 0/0 avg/max bytes residency (0 samples), 247219576 bytes GC work, 22M in use, 0.00 INIT (0.00 elapsed), 0.76 MUT (0.77 elapsed), 0.52 GC (0.52 elapsed), 0.35 GC(0) (0.35 elapsed), 0.17 GC(1) (0.17 elapsed), 1 balance :ghc>>
